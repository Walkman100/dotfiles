#!/usr/bin/env bash
alias TextEdit='/Applications/TextEdit.app/Contents/MacOS/TextEdit'

# LS uses different argument for colour
alias ls='ls -G'

# Add show absolutely all info
alias laa='la -@Oe'

# OSX's nano doesn't support -P
alias nano='nano -AEiw -T 4'

# force-remove function
function rmf {
	rm -rf "$@" 2>/dev/null
	if [ "$?" != "0" ]; then
		echo "Normal rm -f failed, removing user immutable flag..."
		chflags -R nouchg "$@"
		rm -rf "$@" 2>/dev/null
		if [ "$?" != "0" ]; then
			echo "Removing user immutable flag didn't help, removing ACLs..."
			chmod -RN "$@"
			rm -rf "$@"
		fi
	fi
	echo "Done."
}

# re-define about because la behaves differently
function about {
    if which $* 1>/dev/null; then
        la `which $*`
    else
        echo "Command \"$*\" not found!"
    fi
}

function alert {
	if [ -z "$*" ]; then
		osascript -e "display notification \"Alert in $PWD\" with title \"Terminal\""
	elif [ -z "$2" ]; then
		osascript -e "display notification \"$1\" with title \"Terminal\""
	else
		osascript -e "display notification \"$1\" with title \"$2\""
	fi
}

# aliases and functions
alias kinitfull='kinit mcarter@WETHINKCODE.CO.ZA'
function norm {
	norminette "$@" 2>/dev/null
}
alias moul='norm'

function gitclone {
	if [ -z "$(klist 2>&1 | grep 'mcarter@WETHINKCODE.CO.ZA')" ]; then
		kdestroy 2>/dev/null
		until kinitfull; do
			echo "Retrying..."
		done
	fi
	git clone --recursive $1 $2 $3 $4 $5 $6 $7 $8 $9
	if [ -z "$2" ]; then
		cd "${1##*/}"
	else
		cd "$2"
	fi
}

function gitpush {
	if [ -z "$(klist 2>&1 | grep 'mcarter@WETHINKCODE.CO.ZA')" ]; then
		kdestroy 2>/dev/null
		until kinitfull; do
			echo "Retrying..."
		done
	fi
	git push
}

function gitadd {
	git add $*
	git commit -m "Added $*"
}

function pi {
    ssh -J serveo.net pi@walkman
}

function walkmanpc {
    ssh -J serveo.net,pi@walkman walkman@10.0.0.122
}
